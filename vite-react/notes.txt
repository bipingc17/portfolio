-> UI/UX 
    => Library 

    -> Virutal DOM 
    -> Client Side 


Component 
    url => Page 
        same url reusable codes => component


    Class based component       => Stateful component  
    Function based component    => Stateless Component 

A component stroes two types of data: 
    a. Incoming data            => Props
    b. Self Data                => State

props 
    => incoming data to a component
    => They are readonly data

https://ekantipur.com
    /news/2023/07/07/168869280774795483.html


/news
    /2023
        /07
            /07
                /timestamp .html 

/news/:year/:month/:date/:slug.html


API call FE 
    =====> XMLHttpRequest (XHR request)
    =====> jQuery => ajax 
    =====> js   => fetch
    =====> axios/xhr request 

    API-API 
        superagent
    Client-API
        axios 
        fetch 
        XMLHttpRequest

    API-Client 
        - socket io



BE 
    - API => Repl 


FE 

develop 
    ======> git Repo Push 
                ====> branch 
                    - develop
                        - nightly (CI/CD)   ====> dev server (QA, PM, Devs)
                ===> Staging 
                        - staging (CI/CD)   ====> Staging server (QA, PM, Devs, Client)
                ===> production 
                        - prod main/master       ====> Public release

                        ====> development Server / nightly


cookie 
    - domain dependent
    - 50 cookies
    - path dependent
        e.g. /admin => 
            / 
    - per cookie 4096 chars 
    - on maturity gets deleted 
    - document.cookie = "name=value;value=data;expiresIn=UAT"

localstorage
    - domain dependent
    - no limitiation on no of items
    - not path dependent
    - no limit on the item but max of 5mb per domain
    - non-volatile data 
    
    - localStorage.setItem(key, value)
    - localStorage.getItem(key)
    - localStorage.removeItem(key)
    - localStorage.clear()


Only string 

localStorage        sessionStorage